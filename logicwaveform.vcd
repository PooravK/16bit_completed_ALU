$date
	Tue Jul 29 00:50:35 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module tb_logic_top $end
$var wire 16 ! result [15:0] $end
$var reg 16 " in0 [15:0] $end
$var reg 16 # in1 [15:0] $end
$var reg 3 $ sel [2:0] $end
$scope module uut $end
$var wire 16 % in0 [15:0] $end
$var wire 16 & in1 [15:0] $end
$var wire 3 ' sel [2:0] $end
$var wire 16 ( xor_out [15:0] $end
$var wire 16 ) xnor_out [15:0] $end
$var wire 16 * or_out [15:0] $end
$var wire 16 + not_out [15:0] $end
$var wire 16 , nor_out [15:0] $end
$var wire 16 - nand_out [15:0] $end
$var wire 16 . and_out [15:0] $end
$var reg 16 / result [15:0] $end
$scope module andmodule $end
$var wire 16 0 and_out [15:0] $end
$var wire 16 1 in0 [15:0] $end
$var wire 16 2 in1 [15:0] $end
$upscope $end
$scope module nandmodule $end
$var wire 16 3 in0 [15:0] $end
$var wire 16 4 in1 [15:0] $end
$var wire 16 5 nand_out [15:0] $end
$upscope $end
$scope module normodule $end
$var wire 16 6 in0 [15:0] $end
$var wire 16 7 in1 [15:0] $end
$var wire 16 8 nor_out [15:0] $end
$upscope $end
$scope module notmodule $end
$var wire 16 9 in0 [15:0] $end
$var wire 16 : in1 [15:0] $end
$var wire 16 ; not_out [15:0] $end
$upscope $end
$scope module ormodule $end
$var wire 16 < in0 [15:0] $end
$var wire 16 = in1 [15:0] $end
$var wire 16 > or_out [15:0] $end
$upscope $end
$scope module xnormodule $end
$var wire 16 ? in0 [15:0] $end
$var wire 16 @ in1 [15:0] $end
$var wire 16 A xnor_out [15:0] $end
$upscope $end
$scope module xormodule $end
$var wire 16 B in0 [15:0] $end
$var wire 16 C in1 [15:0] $end
$var wire 16 D xor_out [15:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b0 D
b0 C
b0 B
b1111111111111111 A
b0 @
b0 ?
b0 >
b0 =
b0 <
b1111111111111111 ;
b0 :
b0 9
b1111111111111111 8
b0 7
b0 6
b1111111111111111 5
b0 4
b0 3
b0 2
b0 1
b0 0
b0 /
b0 .
b1111111111111111 -
b1111111111111111 ,
b1111111111111111 +
b0 *
b1111111111111111 )
b0 (
b0 '
b0 &
b0 %
b0 $
b0 #
b0 "
b0 !
$end
#10000
b1111111111111110 ,
b1111111111111110 8
b1111111111111110 )
b1111111111111110 A
b1 *
b1 >
b1 (
b1 D
b1 #
b1 &
b1 2
b1 4
b1 7
b1 :
b1 =
b1 @
b1 C
#20000
b1111111111111110 +
b1111111111111110 ;
b0 #
b0 &
b0 2
b0 4
b0 7
b0 :
b0 =
b0 @
b0 C
b1 "
b1 %
b1 1
b1 3
b1 6
b1 9
b1 <
b1 ?
b1 B
#30000
b1111111111111110 -
b1111111111111110 5
b1111111111111111 )
b1111111111111111 A
b1 !
b1 /
b1 .
b1 0
b0 (
b0 D
b1 #
b1 &
b1 2
b1 4
b1 7
b1 :
b1 =
b1 @
b1 C
#40000
b1111111111111111 -
b1111111111111111 5
b1111111111111111 ,
b1111111111111111 8
b0 !
b0 /
b0 .
b0 0
b1111111111111111 +
b1111111111111111 ;
b0 *
b0 >
b0 #
b0 &
b0 2
b0 4
b0 7
b0 :
b0 =
b0 @
b0 C
b0 "
b0 %
b0 1
b0 3
b0 6
b0 9
b0 <
b0 ?
b0 B
b1 $
b1 '
#50000
b1111111111111110 ,
b1111111111111110 8
b1111111111111110 )
b1111111111111110 A
b1 !
b1 /
b1 *
b1 >
b1 (
b1 D
b1 #
b1 &
b1 2
b1 4
b1 7
b1 :
b1 =
b1 @
b1 C
#60000
b1111111111111110 +
b1111111111111110 ;
b0 #
b0 &
b0 2
b0 4
b0 7
b0 :
b0 =
b0 @
b0 C
b1 "
b1 %
b1 1
b1 3
b1 6
b1 9
b1 <
b1 ?
b1 B
#70000
b1111111111111110 -
b1111111111111110 5
b1111111111111111 )
b1111111111111111 A
b1 .
b1 0
b0 (
b0 D
b1 #
b1 &
b1 2
b1 4
b1 7
b1 :
b1 =
b1 @
b1 C
#80000
b1111111111111111 -
b1111111111111111 5
b1111111111111111 ,
b1111111111111111 8
b0 .
b0 0
b1111111111111111 +
b1111111111111111 ;
b0 *
b0 >
b0 !
b0 /
b0 #
b0 &
b0 2
b0 4
b0 7
b0 :
b0 =
b0 @
b0 C
b0 "
b0 %
b0 1
b0 3
b0 6
b0 9
b0 <
b0 ?
b0 B
b10 $
b10 '
#90000
b1111111111111110 ,
b1111111111111110 8
b1111111111111110 )
b1111111111111110 A
b1 !
b1 /
b1 *
b1 >
b1 (
b1 D
b1 #
b1 &
b1 2
b1 4
b1 7
b1 :
b1 =
b1 @
b1 C
#100000
b1111111111111110 +
b1111111111111110 ;
b0 #
b0 &
b0 2
b0 4
b0 7
b0 :
b0 =
b0 @
b0 C
b1 "
b1 %
b1 1
b1 3
b1 6
b1 9
b1 <
b1 ?
b1 B
#110000
b1111111111111110 -
b1111111111111110 5
b1111111111111111 )
b1111111111111111 A
b0 !
b0 /
b1 .
b1 0
b0 (
b0 D
b1 #
b1 &
b1 2
b1 4
b1 7
b1 :
b1 =
b1 @
b1 C
#120000
b1111111111111111 -
b1111111111111111 5
b1111111111111111 ,
b1111111111111111 8
b0 .
b0 0
b1111111111111111 +
b1111111111111111 ;
b0 *
b0 >
b1111111111111111 !
b1111111111111111 /
b0 #
b0 &
b0 2
b0 4
b0 7
b0 :
b0 =
b0 @
b0 C
b0 "
b0 %
b0 1
b0 3
b0 6
b0 9
b0 <
b0 ?
b0 B
b11 $
b11 '
#130000
b1111111111111110 ,
b1111111111111110 8
b1111111111111110 )
b1111111111111110 A
b1 *
b1 >
b1 (
b1 D
b1 #
b1 &
b1 2
b1 4
b1 7
b1 :
b1 =
b1 @
b1 C
#140000
b1111111111111110 !
b1111111111111110 /
b1111111111111110 +
b1111111111111110 ;
b0 #
b0 &
b0 2
b0 4
b0 7
b0 :
b0 =
b0 @
b0 C
b1 "
b1 %
b1 1
b1 3
b1 6
b1 9
b1 <
b1 ?
b1 B
#150000
b1111111111111110 -
b1111111111111110 5
b1111111111111111 )
b1111111111111111 A
b1 .
b1 0
b0 (
b0 D
b1 #
b1 &
b1 2
b1 4
b1 7
b1 :
b1 =
b1 @
b1 C
#160000
b1111111111111111 !
b1111111111111111 /
b1111111111111111 -
b1111111111111111 5
b1111111111111111 ,
b1111111111111111 8
b0 .
b0 0
b1111111111111111 +
b1111111111111111 ;
b0 *
b0 >
b0 #
b0 &
b0 2
b0 4
b0 7
b0 :
b0 =
b0 @
b0 C
b0 "
b0 %
b0 1
b0 3
b0 6
b0 9
b0 <
b0 ?
b0 B
b100 $
b100 '
#170000
b1111111111111110 ,
b1111111111111110 8
b1111111111111110 )
b1111111111111110 A
b1 *
b1 >
b1 (
b1 D
b1 #
b1 &
b1 2
b1 4
b1 7
b1 :
b1 =
b1 @
b1 C
#180000
b1111111111111110 +
b1111111111111110 ;
b0 #
b0 &
b0 2
b0 4
b0 7
b0 :
b0 =
b0 @
b0 C
b1 "
b1 %
b1 1
b1 3
b1 6
b1 9
b1 <
b1 ?
b1 B
#190000
b1111111111111110 !
b1111111111111110 /
b1111111111111110 -
b1111111111111110 5
b1111111111111111 )
b1111111111111111 A
b1 .
b1 0
b0 (
b0 D
b1 #
b1 &
b1 2
b1 4
b1 7
b1 :
b1 =
b1 @
b1 C
#200000
b1111111111111111 !
b1111111111111111 /
b1111111111111111 -
b1111111111111111 5
b1111111111111111 ,
b1111111111111111 8
b0 .
b0 0
b1111111111111111 +
b1111111111111111 ;
b0 *
b0 >
b0 #
b0 &
b0 2
b0 4
b0 7
b0 :
b0 =
b0 @
b0 C
b0 "
b0 %
b0 1
b0 3
b0 6
b0 9
b0 <
b0 ?
b0 B
b101 $
b101 '
#210000
b1111111111111110 !
b1111111111111110 /
b1111111111111110 ,
b1111111111111110 8
b1111111111111110 )
b1111111111111110 A
b1 *
b1 >
b1 (
b1 D
b1 #
b1 &
b1 2
b1 4
b1 7
b1 :
b1 =
b1 @
b1 C
#220000
b1111111111111110 +
b1111111111111110 ;
b0 #
b0 &
b0 2
b0 4
b0 7
b0 :
b0 =
b0 @
b0 C
b1 "
b1 %
b1 1
b1 3
b1 6
b1 9
b1 <
b1 ?
b1 B
#230000
b1111111111111110 -
b1111111111111110 5
b1111111111111111 )
b1111111111111111 A
b1 .
b1 0
b0 (
b0 D
b1 #
b1 &
b1 2
b1 4
b1 7
b1 :
b1 =
b1 @
b1 C
#240000
b1111111111111111 -
b1111111111111111 5
b1111111111111111 ,
b1111111111111111 8
b0 .
b0 0
b1111111111111111 +
b1111111111111111 ;
b0 *
b0 >
b1111111111111111 !
b1111111111111111 /
b0 #
b0 &
b0 2
b0 4
b0 7
b0 :
b0 =
b0 @
b0 C
b0 "
b0 %
b0 1
b0 3
b0 6
b0 9
b0 <
b0 ?
b0 B
b110 $
b110 '
#250000
b1111111111111110 !
b1111111111111110 /
b1111111111111110 ,
b1111111111111110 8
b1111111111111110 )
b1111111111111110 A
b1 *
b1 >
b1 (
b1 D
b1 #
b1 &
b1 2
b1 4
b1 7
b1 :
b1 =
b1 @
b1 C
#260000
b1111111111111110 +
b1111111111111110 ;
b0 #
b0 &
b0 2
b0 4
b0 7
b0 :
b0 =
b0 @
b0 C
b1 "
b1 %
b1 1
b1 3
b1 6
b1 9
b1 <
b1 ?
b1 B
#270000
b1111111111111111 !
b1111111111111111 /
b1111111111111110 -
b1111111111111110 5
b1111111111111111 )
b1111111111111111 A
b1 .
b1 0
b0 (
b0 D
b1 #
b1 &
b1 2
b1 4
b1 7
b1 :
b1 =
b1 @
b1 C
#280000
b1111111111111111 -
b1111111111111111 5
b1111111111111111 ,
b1111111111111111 8
b0 .
b0 0
b1111111111111111 +
b1111111111111111 ;
b0 *
b0 >
b0 !
b0 /
b0 #
b0 &
b0 2
b0 4
b0 7
b0 :
b0 =
b0 @
b0 C
b0 "
b0 %
b0 1
b0 3
b0 6
b0 9
b0 <
b0 ?
b0 B
b111 $
b111 '
#290000
b1111111111111110 ,
b1111111111111110 8
b1111111111111110 )
b1111111111111110 A
b1 *
b1 >
b1 (
b1 D
b1 #
b1 &
b1 2
b1 4
b1 7
b1 :
b1 =
b1 @
b1 C
#300000
b1111111111111110 +
b1111111111111110 ;
b0 #
b0 &
b0 2
b0 4
b0 7
b0 :
b0 =
b0 @
b0 C
b1 "
b1 %
b1 1
b1 3
b1 6
b1 9
b1 <
b1 ?
b1 B
#310000
b1111111111111110 -
b1111111111111110 5
b1111111111111111 )
b1111111111111111 A
b1 .
b1 0
b0 (
b0 D
b1 #
b1 &
b1 2
b1 4
b1 7
b1 :
b1 =
b1 @
b1 C
#320000
